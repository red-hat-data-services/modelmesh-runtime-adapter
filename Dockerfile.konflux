
#ARG BUILD_BASE=develop

#go-1.23
FROM registry.redhat.io/ubi9/go-toolset:1.23@sha256:381fb72f087a07432520fa93364f66b5981557f1dd708f3c4692d6d0a76299b3 AS build

USER root

# needed for konflux as the previous stage is not used
WORKDIR /opt/app
COPY go.mod go.sum ./
# Download dependencies before copying the source so they will be cached
RUN go mod download

# Copy the source
COPY . ./

USER root

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg \
    export GOOS=${TARGETOS:-linux} && \
    export GOARCH=${TARGETARCH:-amd64} && \
    go build -o puller model-serving-puller/main.go && \
    go build -o triton-adapter model-mesh-triton-adapter/main.go && \
    go build -o mlserver-adapter model-mesh-mlserver-adapter/main.go && \
    go build -o ovms-adapter model-mesh-ovms-adapter/main.go && \
    go build -o torchserve-adapter model-mesh-torchserve-adapter/main.go


#Copy build assets to create the smallest final runtime image
###############################################################################

#ubi-minimal:latest
FROM registry.redhat.io/ubi8/ubi-minimal@sha256:8075621ed734d32d91faba9205bbbf310fc579eb3920ec292b2c67980e4dd51b as runtime

ARG USER=2000

USER root


# Copy over the binary and use it as the entrypoint
COPY --from=build /opt/app/puller /opt/app/
COPY --from=build /opt/app/triton-adapter /opt/app/
COPY --from=build /opt/app/mlserver-adapter /opt/app/
COPY --from=build /opt/app/ovms-adapter /opt/app/
COPY --from=build /opt/app/torchserve-adapter /opt/app/

LABEL com.redhat.component="odh-modelmesh-runtime-adapter-container" \
      name="managed-open-data-hub/odh-modelmesh-runtime-adapter-container-rhel8" \
      description="Container which runs in each model serving pod and act as an intermediary between model-mesh and third-party model-server containers" \
      summary="odh-model-serving-runtime-adapter" \
      maintainer="['managed-open-data-hub@redhat.com']" \
      io.k8s.display-name="odh-model-serving-runtime-adapter" \
      io.k8s.description="odh-model-serving-runtime-adapter" \
      com.redhat.license_terms="https://www.redhat.com/licenses/Red_Hat_Standard_EULA_20191108.pdf"
      
# Don't define an entrypoint. This is a multi-purpose image so the user should specify which binary they want to run (e.g. /opt/app/puller or /opt/app/triton-adapter)
# ENTRYPOINT ["/opt/app/puller"]
